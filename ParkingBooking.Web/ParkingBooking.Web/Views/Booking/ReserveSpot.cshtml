@model List<ParkingSpot>
@{
    var parking = ViewData["parking"] as Parking;

    var startDate = ViewData["StartDate"] as string ?? DateTime.Now.ToString("yyyy-MM-dd");
    var startTime = ViewData["StartTime"] as string ?? RoundToNearest15Minutes(DateTime.Now).ToString("HH:mm");
    var endDate = ViewData["EndDate"] as string ?? DateTime.Now.ToString("yyyy-MM-dd");
    var endTime = ViewData["EndTime"] as string ?? RoundToNearest15Minutes(DateTime.Now.AddHours(1)).ToString("HH:mm");
}

@functions {
    public DateTime RoundToNearest15Minutes(DateTime dateTime)
    {
        int minutes = dateTime.Minute;
        int roundedMinutes = (int)Math.Ceiling(minutes / 15.0) * 15; // Округляем вверх
        if (roundedMinutes >= 60) // Если минуты превышают 59, увеличиваем час
        {
            roundedMinutes = 0;
            dateTime = dateTime.AddHours(1);
        }
        return new DateTime(dateTime.Year, dateTime.Month, dateTime.Day, dateTime.Hour, 0, 0).AddMinutes(roundedMinutes);
    }

    public List<string> GenerateTimeOptions(string selectedTime)
    {
        var times = new List<string>();
        for (int hour = 0; hour < 24; hour++)
        {
            for (int minute = 0; minute < 60; minute += 15)
            {
                string timeString = $"{hour:00}:{minute:00}";
                times.Add(timeString);
            }
        }
        return times;
    }
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-danger">
        @TempData["Message"]
    </div>
}

<h2><b>@parking.Address</b></h2>

<form action="/Booking/ReserveSpot" method="get">
    <input type="hidden" name="id" value="@parking.ParkingId" />
    <table>
        <tr>
            <td>
                <div class="form-group">
                    <label for="start-date">Дата начала бронирования</label>
                    <input type="date" id="start-date" name="startDate" class="form-control" value="@startDate" />
                    <span class="text-danger" data-valmsg-for="start-date"></span>
                </div>
            </td>
            <td>
                <div class="form-group">
                    <label for="start-time">Время начала бронирования</label>
                    <select id="start-time" name="startTime" class="form-control">
                        @foreach (var time in GenerateTimeOptions(startTime))
                        {
                            <option value="@time" selected="@(time == startTime ? "selected" : null)">@time</option>
                        }
                    </select>
                    <span class="text-danger" data-valmsg-for="start-time"></span>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    <label for="end-date">Дата окончания бронирования</label>
                    <input type="date" id="end-date" name="endDate" class="form-control" value="@endDate" />
                    <span class="text-danger" data-valmsg-for="end-date"></span>
                </div>
            </td>
            <td>
                <div class="form-group">
                    <label for="end-time">Время окончания бронирования</label>
                    <select id="end-time" name="endTime" class="form-control">
                        @foreach (var time in GenerateTimeOptions(endTime))
                        {
                            <option value="@time" selected="@(time == endTime ? "selected" : null)">@time</option>
                        }
                    </select>
                    <span class="text-danger" data-valmsg-for="end-time"></span>
                </div>
            </td>
        </tr>
    </table>

    <button type="submit" class="btn btn-primary">Показать доступные места</button>
</form>

<h3>Доступные парковочные места:</h3>
@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Адрес</th>
                <th>Описание</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var spot in Model)
            {
                <tr>
                    <td>@spot.Number</td>
                    <td>@spot.Information</td>
                    <td>
                        <a asp-action="MakeReservation" 
                            asp-route-id= "@spot.ParkingSpotId"
                           asp-route-startDate="@startDate"
                           asp-route-startTime="@startTime"
                           asp-route-endDate="@endDate"
                           asp-route-endTime="@endTime"
                           class="btn btn-success">Забронировать</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<script>
    // Скрываем список парковочных мест при изменении параметров времени
    function hideParkingSpots() {
        const parkingSpotsTable = document.querySelector('.table'); // Находим таблицу с парковочными местами
        if (parkingSpotsTable) {
            parkingSpotsTable.style.display = 'none'; // Скрываем таблицу
        }
    }

    // Назначаем обработчики событий для полей формы
    function setupEventListeners() {
        const startDateInput = document.getElementById('start-date');
        const startTimeInput = document.getElementById('start-time');
        const endDateInput = document.getElementById('end-date');
        const endTimeInput = document.getElementById('end-time');

        startDateInput.addEventListener('change', hideParkingSpots);
        startTimeInput.addEventListener('change', hideParkingSpots);
        endDateInput.addEventListener('change', hideParkingSpots);
        endTimeInput.addEventListener('change', hideParkingSpots);
    }

    // Инициализация при загрузке страницы
    document.addEventListener('DOMContentLoaded', function () {
        setupEventListeners(); 
    });
</script>